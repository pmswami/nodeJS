NodeJS can -
    read & write files on computer
    connect to a database
    act as a server for content

Why NodeJS
    No need to learn an extra language for server
    can share code between front and back end
    NodeJS has a massive community behind it
    huge amount of third-party packages and tools to help

IP addresses
    addresses for each computer on internet
    Whenever a request is made, a lookup is made for particular domain name and it returns hostIP of that domain
    HTTP => HyperText Transfer Protocol

Localhost(127.0.0.1) is like a domain name on 
Port number is like doors into a computer.

Status code describe the type of the response sent to the browser
    Common status codes
        200 => Ok
        301 => Resource moved
        404 => Not Found
        500 => Internal Server Error
    Status Codes
        100 Range => Informational Responses
        200 Range => Success Codes
        300 Range => Codes for redirects
        400 Range => User or Client error codes
        500 Range => Server error codes

EJS Templates
    EJS Templates are processed through the EJS view engine on the server.
    EJS => Embedded JavaScript
    EJS sits along with the other packages in the server which convert the EJS snipptes into a valid HTML code.
    
Middleware
    Code which runs(on the server) between getting a request and sendinga response
    Middleware examples
        Logger middleware to log details of every request
        Authentication check middleware for protected routes
        Middleware to parse JSON data from requests
        Return 404 pages.
MongoDB
    data is stored in documents inside a collection.
    Document is like a record of data
    Documents are similar to JSON

Mongoose
    Mongoose is an ODM library -Object Document Mapping library.
    Schemas defines the structure of a type of data/documents, properties and property types.
    Models allows us to communicate with database collections.
    